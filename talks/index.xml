<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Wasim Lorgat</title>
<link>https://wasimlorgat.com/talks/index.html</link>
<atom:link href="https://wasimlorgat.com/talks/index.xml" rel="self" type="application/rss+xml"/>
<description>Recent talks on wasimlorgat.com</description>
<generator>quarto-1.3.230</generator>
<lastBuildDate>Sat, 17 Mar 2018 00:00:00 GMT</lastBuildDate>
<item>
  <title>This is not an idea</title>
  <dc:creator>Wasim Lorgat</dc:creator>
  <link>https://wasimlorgat.com/talks/this-is-not-an-idea.html</link>
  <description><![CDATA[ 



<div class="quarto-video ratio ratio-16x9"><iframe data-external="1" src="https://www.youtube.com/embed/o8-IuUMG2T8" title="" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe></div>
<p><em>(The original title and description of the talk changed between the pitch and final version, hence the differences.)</em></p>
<p>This is a lightning talk I gave at the satRday 2018 conference. In it, I share an epiphany I had about programming and how it relates to people and our ideas, after programming for most of my life and discovering higher-level languages like Python and R. The talk won best student lightning talk, which included a copy of the beautiful <a href="https://r4ds.hadley.nz/">R for Data Science</a> signed by Hadley Wickham himself!</p>
<p>Fast forward 4 years, and this realisation doesn’t feel as profound as it once did, but that’s okay. I believe the world would be a little better if everyone shared their personal learnings and experiences. Please <a href="mailto:mwlorgat@gmail.com">let me know</a> of yours!</p>
<p>Anyway, keep scrolling for a written version of the talk.</p>
<section id="my-journey-from-game-maker-to-python" class="level2">
<h2 class="anchored" data-anchor-id="my-journey-from-game-maker-to-python">My journey from Game Maker to Python <img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-1.png" class="img-fluid"></h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-1.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Good morning everyone, my name is Wasim.</p>
<p>A little background. I started programming when I was in primary school. I’ve always loved games, and making things. Unsurprisingly, my foray into programming started with making games.</p>
<p>After vigorous searching for game making software, with my favourite search engine at the time, AltaVista, which some of you may remember, I found a program called Game Maker.</p>
<p>It had a GUI, where you created game objects and programmed logic into them with buttons. It also had scripting capabilities. But I didn’t dare to delve into them.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-2.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Eventually, a cousin of mine introduced me to a more powerful tool. A programming language called DarkBASIC, a form of the language, BASIC.</p>
<p>It had a nice editor, a built-in command line interface. I think the 1 and 2 on the top right corresponded to tabs. And it allowed you to create 3D games.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-3.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>I then moved on to some of the more “real” programming languages. I dabbled in C++.</p>
<p>I was taught Java in high school.</p>
<p>And finally, I settled on Python. I think the reason I hopped so often from one language to the next, was because I was never quite satisfied with how it “felt” to program in these languages. I was never truly comfortable with the way I had to translate what I <em>thought</em> into what I <em>typed</em>. Until Python.</p>
</section>
<section id="the-joy-of-high-level-languages" class="level2">
<h2 class="anchored" data-anchor-id="the-joy-of-high-level-languages">The joy of high-level languages <img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-4.png" class="img-fluid"></h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-4.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>With Python, I learned about writing and reading beautiful code. If you haven’t already seen this poem, <a href="https://peps.python.org/pep-0020/">The Zen of Python</a>, by Tim Peters, you should check it out.</p>
<p>There is an idea called writing “Pythonic” code, which this poem sort of defines. There was something compelling, almost poetic, about reading and writing “Pythonic” code.</p>
<p>As a young programmer, it was the first time I realized the importance of how code <em>looks</em>, not just what it <em>does</em>.</p>
</section>
<section id="this-is-not-a-pipe" class="level2">
<h2 class="anchored" data-anchor-id="this-is-not-a-pipe">This is not a pipe <img src="https://wasimlorgat.com/talks/images/leci-nest-pas-une-pipe.png" class="img-fluid"></h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://wasimlorgat.com/talks/images/leci-nest-pas-une-pipe.png" class="preview-image img-fluid figure-img"></p>
</figure>
</div>
<p>More recently, I came across an even more interesting idea about how code <em>looks</em>.</p>
<p>Here’s a painting, by the French artist, René Magritte, that captures the idea. The text at the bottom translates to “This is not a pipe.”</p>
<p>If you haven’t seen this before, that might be a little confusing.</p>
<p>“That is a pipe. I’ve seen pipes before, and that, my friend, is a pipe.”</p>
<p>Well, you can’t pack <em>this</em> with tobacco and smoke it. <em>This</em> is a painting of a pipe, an image, a representation, but its not the pipe itself.</p>
<p>At this point, you might be wondering: What does this have to do with code? And what does this talk have to do with R?</p>
<p>Well, just as <em>this</em> is a representation of a pipe…</p>
</section>
<section id="this-is-not-an-idea" class="level2">
<h2 class="anchored" data-anchor-id="this-is-not-an-idea">This is not an idea <img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-7.png" class="img-fluid"></h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-7.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p><em>This</em> is a <em>representation</em> of an <em>idea</em>. The code is <em>not</em> the idea itself.</p>
<p>I believe that when we code (even for experts) we constantly struggle translating between our idea and its representation. If the code is a particularly good representation of our underlying idea, then it flows seamlessly, almost by itself.</p>
<p>On the other hand, if the code is not a good representation of our idea, then this struggle is quite costly.</p>
<p>I wanna show you, by example, why I’m so fascinated by R. This is some very simple dplyr code.</p>
<p>What I do when I read (or write) code like this, is to translate it to and from English. I don’t think “df percent greater than percent…”</p>
</section>
<section id="translating-code-to-idea" class="level2">
<h2 class="anchored" data-anchor-id="translating-code-to-idea">Translating code to idea <img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people.gif" class="img-fluid"></h2>
<p><img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people.gif" class="img-fluid"></p>
<p>I might start off by thinking that I want to “Take df”, in order to do something to it.</p>
<p>I’d read the pipe symbol <code>%&gt;%</code> as “then”.</p>
<p>I <em>then</em> want to filter “rows of df where”</p>
<p>Read the symbol as “is less than”</p>
<p>Replace the pipe symbol with “then” again</p>
<p>I <em>then</em> want to arrange rows of df by…</p>
<p>Same thing with the pipe symbol.</p>
<p>And finally, I want to select the column…</p>
<p>And, very easily, we have an English sentence.</p>
<p>Oh! And if we’re really fussy, we could add punctuation.</p>
<p>So we’ve translated, very easily and systematically, from dplyr code to English.</p>
<p>Isn’t that a beautiful representation?</p>
<p>It’s beautiful because it’s been so carefully designed, functions have been so carefully named, all keeping in mind one very important principle:</p>
</section>
<section id="code-represents-the-ideas-of-people" class="level2">
<h2 class="anchored" data-anchor-id="code-represents-the-ideas-of-people">Code represents the ideas of people <img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-6.png" class="img-fluid"></h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://wasimlorgat.com/talks/images/code-represents-the-ideas-of-people-6.png" class="img-fluid figure-img"></p>
</figure>
</div>
<p>Code represents the ideas of <em>people</em>. By considering the <em>people</em> who will use it, we minimize the cost of translating from obscure machine-friendly commands into beautiful prose.</p>
<p>And by minimizing this cost, it frees our minds to focus on what’s really important: the ideas themselves.</p>


</section>

 ]]></description>
  <guid>https://wasimlorgat.com/talks/this-is-not-an-idea.html</guid>
  <pubDate>Sat, 17 Mar 2018 00:00:00 GMT</pubDate>
  <media:content url="https://wasimlorgat.com/talks/images/leci-nest-pas-une-pipe.png" medium="image" type="image/png" height="100" width="144"/>
</item>
</channel>
</rss>
